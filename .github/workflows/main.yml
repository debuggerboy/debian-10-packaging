on:
  push:
    branches:
      - main

jobs:
  build-deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: singingwolfboy/build-dpkg-buster@v1
        id: build
        with:
          args: --unsigned-source --unsigned-changes

      - name: Listing directory contents
        run: |
          pwd
          ls -la
          ls -li ${{ steps.build.outputs.filename }}

#      - name: copying the deb files
#        run: |
#          mkdir -p deb-pkgs/
#          cp -ar *.deb deb-pkgs/

      - name: upload deb file-1
        uses: actions/upload-artifact@v2
        with:
          name: artifact-deb
          path: |
            ./*.deb
          
      - name: Write upload_url to file
        run: echo '${{ steps.create-release.outputs.upload_url }}' > upload_url.txt
        
      - uses: actions/upload-artifact@v2
        with:
          name: create-release
          path: upload_url.txt
          
      - uses: actions/download-artifact@v2
        with:
          name: create-release
          
      - id: vars
        run: |
          echo "::set-output name=upload_url::$(cat upload_url.txt)"

      - uses: actions/download-artifact@v2
        with:
          name: artifact-deb

      - uses: actions/download-artifact@v2
        with:
          name: create-release

      - id: rel_vars
        run: |
          echo "::set-output name=upload_url::$(cat upload_url.txt)"
          echo "::set-output name=asset_name::$(ls *.deb | head -n 1)"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.rel_vars.outputs.upload_url }}
          asset_path: ${{ steps.rel_vars.outputs.asset_name }}
          asset_name: ${{ steps.rel_vars.outputs.asset_name }}
          asset_content_type: application/vnd.debian.binary-package
