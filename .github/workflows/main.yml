on:
  push:
    branches:
      - main

env:
  APP_NAME: 'sample-deb'
  MAINTAINER: 'Debuggerboy <debuggerboy@gmail.com>'
  VERSION: '0.0.1'
  DESC: 'Sample Debian 10 pacakage'

jobs:
  build-artifact:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Listing directory contents
        run: |
          sed -e "s/^# deb-src/deb-src/g" /etc/apt/sources.list
          cat /etc/apt/sources.list

  build-linux-packages:
    runs-on: ubuntu-latest
    steps:
    
      - name: Listing directory contents
        run: |
          sed -e "s/^# deb-src/deb-src/g" /etc/apt/sources.list
          cat /etc/apt/sources.list
          
      - uses: jiro4989/build-deb-action@v2
        with:
          package: ${{ env.APP_NAME }}
          package_root: .
          maintainer: ${{ env.MAINTAINER }}
          version: ${{ env.VERSION }}
          arch: 'amd64'
          desc: '${{ env.DESC }}'

      - name: Listing directory contents
        run: |
          pwd
          sudo chown runner:docker *.deb
          ls -la
          ls -li ${{ steps.build.outputs.filename }}

      - name: upload deb file-1
        uses: actions/upload-artifact@v2
        with:
          name: artifact-deb
          path: |
            ./*.deb

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-artifact
      - build-linux-packages
      
    steps:
      #- uses: actions/checkout@v1
      
      #- name: Listing directory contents
      #  run: |
      #    echo "Changes" > changelog
      
      #- name: Create Release
      #  id: create-release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    tag_name: ${{ github.ref }}
      #    release_name: ${{ github.ref }}
      #    body_path: ./changelog
      #    draft: false
      #    prerelease: false
      
      - name: Write upload_url to file
        run: echo '${{ steps.create-release.outputs.upload_url }}' > upload_url.txt
        
      - name: copying the deb files
        run: |
          cat upload_url.txt
        
  upload-release:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name_suffix: linux.tar.gz
            asset_content_type: application/gzip

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact-${{ matrix.os }}

      - uses: actions/download-artifact@v2
        with:
          name: create-release

      - id: vars
        run: |
          echo "::set-output name=upload_url::$(cat upload_url.txt)"
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.vars.outputs.upload_url }}
          asset_path: ${{ env.APP_NAME }}_${{ matrix.asset_name_suffix }}
          asset_name: ${{ env.APP_NAME }}_${{ matrix.asset_name_suffix }}
          asset_content_type: ${{ matrix.asset_content_type }}

  upload-linux-packages:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        include:
          - pkg: deb
            asset_content_type: application/vnd.debian.binary-package

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact-${{ matrix.pkg }}

      - uses: actions/download-artifact@v2
        with:
          name: create-release

      - id: vars
        run: |
          echo "::set-output name=upload_url::$(cat upload_url.txt)"
          echo "::set-output name=asset_name::$(ls *.${{ matrix.pkg }} | head -n 1)"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.vars.outputs.upload_url }}
          asset_path: ${{ steps.vars.outputs.asset_name }}
          asset_name: ${{ steps.vars.outputs.asset_name }}
          asset_content_type: ${{ matrix.asset_content_type }}
